import kotlin.String

/**
 * Generated by https://github.com/jmfayard/buildSrcVersions
 *
 * Update this file with
 *   `$ ./gradlew buildSrcVersions` */
object Libs {
    const val navigation_fragment: String = "android.arch.navigation:navigation-fragment:" +
            Versions.android_arch_navigation

    const val navigation_safe_args_gradle_plugin: String =
            "android.arch.navigation:navigation-safe-args-gradle-plugin:" +
            Versions.android_arch_navigation

    const val navigation_ui: String = "android.arch.navigation:navigation-ui:" +
            Versions.android_arch_navigation

    const val work_runtime_ktx: String = "android.arch.work:work-runtime-ktx:" +
            Versions.work_runtime_ktx

    /**
     * http://developer.android.com/tools/extras/support-library.html */
    const val annotation: String = "androidx.annotation:annotation:" + Versions.annotation

    /**
     * http://developer.android.com/tools/extras/support-library.html */
    const val appcompat: String = "androidx.appcompat:appcompat:" + Versions.appcompat

    /**
     * http://developer.android.com/tools/extras/support-library.html */
    const val cardview: String = "androidx.cardview:cardview:" + Versions.cardview

    /**
     * http://tools.android.com */
    const val constraintlayout: String = "androidx.constraintlayout:constraintlayout:" +
            Versions.constraintlayout

    /**
     * http://developer.android.com/tools/extras/support-library.html */
    const val core_ktx: String = "androidx.core:core-ktx:" + Versions.core_ktx

    /**
     * http://developer.android.com/tools/extras/support-library.html */
    const val androidx_core_core: String = "androidx.core:core:" + Versions.androidx_core_core

    const val databinding_adapters: String = "androidx.databinding:databinding-adapters:" +
            Versions.androidx_databinding

    /**
     * https://developer.android.com/studio */
    const val databinding_common: String = "androidx.databinding:databinding-common:" +
            Versions.androidx_databinding

    /**
     * https://developer.android.com/studio */
    const val databinding_compiler: String = "androidx.databinding:databinding-compiler:" +
            Versions.androidx_databinding

    const val databinding_runtime: String = "androidx.databinding:databinding-runtime:" +
            Versions.androidx_databinding

    /**
     * http://developer.android.com/tools/extras/support-library.html */
    const val gridlayout: String = "androidx.gridlayout:gridlayout:" + Versions.gridlayout

    /**
     * http://developer.android.com/tools/extras/support-library.html */
    const val legacy_support_v4: String = "androidx.legacy:legacy-support-v4:" +
            Versions.legacy_support_v4

    /**
     * https://developer.android.com/topic/libraries/architecture/index.html */
    const val lifecycle_extensions: String = "androidx.lifecycle:lifecycle-extensions:" +
            Versions.androidx_lifecycle

    /**
     * https://developer.android.com/topic/libraries/architecture/index.html */
    const val lifecycle_reactivestreams: String = "androidx.lifecycle:lifecycle-reactivestreams:" +
            Versions.androidx_lifecycle

    const val multidex: String = "androidx.multidex:multidex:" + Versions.multidex

    /**
     * https://developer.android.com/topic/libraries/architecture/index.html */
    const val room_compiler: String = "androidx.room:room-compiler:" + Versions.androidx_room

    /**
     * https://developer.android.com/topic/libraries/architecture/index.html */
    const val room_runtime: String = "androidx.room:room-runtime:" + Versions.androidx_room

    /**
     * https://developer.android.com/topic/libraries/architecture/index.html */
    const val room_rxjava2: String = "androidx.room:room-rxjava2:" + Versions.androidx_room

    /**
     * https://developer.android.com/testing */
    const val espresso_contrib: String = "androidx.test.espresso:espresso-contrib:" +
            Versions.androidx_test_espresso

    /**
     * https://developer.android.com/testing */
    const val espresso_core: String = "androidx.test.espresso:espresso-core:" +
            Versions.androidx_test_espresso

    /**
     * https://developer.android.com/testing */
    const val androidx_test_ext_junit: String = "androidx.test.ext:junit:" +
            Versions.androidx_test_ext

    /**
     * https://developer.android.com/testing */
    const val androidx_test_ext_truth: String = "androidx.test.ext:truth:" +
            Versions.androidx_test_ext

    /**
     * https://developer.android.com/testing */
    const val androidx_test_core: String = "androidx.test:core:" + Versions.androidx_test_core

    /**
     * https://developer.android.com/testing */
    const val androidx_test_rules: String = "androidx.test:rules:" + Versions.androidx_test_rules

    /**
     * https://developer.android.com/testing */
    const val androidx_test_runner: String = "androidx.test:runner:" + Versions.androidx_test_runner

    /**
     * http://developer.android.com/tools/extras/support-library.html */
    const val vectordrawable_animated: String = "androidx.vectordrawable:vectordrawable-animated:" +
            Versions.vectordrawable_animated

    /**
     * https://developer.android.com/studio */
    const val aapt2: String = "com.android.tools.build:aapt2:" + Versions.aapt2

    /**
     * https://developer.android.com/studio */
    const val com_android_tools_build_gradle: String = "com.android.tools.build:gradle:" +
            Versions.com_android_tools_build_gradle

    /**
     * https://developer.android.com/studio */
    const val lint_gradle: String = "com.android.tools.lint:lint-gradle:" + Versions.lint_gradle

    const val crashlytics: String = "com.crashlytics.sdk.android:crashlytics:" +
            Versions.crashlytics

    /**
     * https://github.com/diffplug/plugin-gradle */
    const val spotless_plugin_gradle: String = "com.diffplug.spotless:spotless-plugin-gradle:" +
            Versions.spotless_plugin_gradle

    /**
     * https://github.com/facebook/stetho */
    const val stetho_okhttp3: String = "com.facebook.stetho:stetho-okhttp3:" +
            Versions.com_facebook_stetho

    /**
     * https://github.com/facebook/stetho */
    const val stetho: String = "com.facebook.stetho:stetho:" + Versions.com_facebook_stetho

    /**
     * https://github.com/ajitsing/Sherlock */
    const val sherlock_no_op: String = "com.github.ajitsing:sherlock-no-op:" +
            Versions.com_github_ajitsing

    /**
     * https://github.com/ajitsing/Sherlock */
    const val sherlock: String = "com.github.ajitsing:sherlock:" + Versions.com_github_ajitsing

    /**
     * http://developer.android.com/tools/extras/support-library.html */
    const val material: String = "com.google.android.material:material:" + Versions.material

    /**
     * https://github.com/google/gson */
    const val gson: String = "com.google.code.gson:gson:" + Versions.gson

    /**
     * https://github.com/google/dagger */
    const val dagger_android_processor: String = "com.google.dagger:dagger-android-processor:" +
            Versions.com_google_dagger

    /**
     * https://github.com/google/dagger */
    const val dagger_android_support: String = "com.google.dagger:dagger-android-support:" +
            Versions.com_google_dagger

    /**
     * https://github.com/google/dagger */
    const val dagger_compiler: String = "com.google.dagger:dagger-compiler:" +
            Versions.com_google_dagger

    /**
     * https://github.com/google/dagger */
    const val dagger: String = "com.google.dagger:dagger:" + Versions.com_google_dagger

    const val firebase_database: String = "com.google.firebase:firebase-database:" +
            Versions.firebase_database

    /**
     * http://tools.android.com/ */
    const val google_services: String = "com.google.gms:google-services:" + Versions.google_services

    /**
     * http://github.com/google/truth */
    const val com_google_truth_truth: String = "com.google.truth:truth:" +
            Versions.com_google_truth_truth

    /**
     * https://github.com/JakeWharton/timber */
    const val timber: String = "com.jakewharton.timber:timber:" + Versions.timber

    /**
     * https://github.com/JakeWharton/butterknife/ */
    const val butterknife_compiler: String = "com.jakewharton:butterknife-compiler:" +
            Versions.com_jakewharton

    /**
     * https://github.com/JakeWharton/butterknife/ */
    const val butterknife: String = "com.jakewharton:butterknife:" + Versions.com_jakewharton

    /**
     * https://github.com/nhaarman/mockito-kotlin */
    const val mockito_kotlin: String = "com.nhaarman.mockitokotlin2:mockito-kotlin:" +
            Versions.mockito_kotlin

    /**
     * https://github.com/jgilfelt/chuck */
    const val library_no_op: String = "com.readystatesoftware.chuck:library-no-op:" +
            Versions.com_readystatesoftware_chuck

    /**
     * https://github.com/jgilfelt/chuck */
    const val library: String = "com.readystatesoftware.chuck:library:" +
            Versions.com_readystatesoftware_chuck

    /**
     * https://github.com/square/moshi */
    const val moshi_adapters: String = "com.squareup.moshi:moshi-adapters:" +
            Versions.moshi_adapters

    /**
     * https://github.com/square/okhttp */
    const val logging_interceptor: String = "com.squareup.okhttp3:logging-interceptor:" +
            Versions.logging_interceptor

    /**
     * https://github.com/square/okhttp */
    const val mockwebserver: String = "com.squareup.okhttp3:mockwebserver:" + Versions.mockwebserver

    /**
     * https://github.com/square/retrofit/ */
    const val adapter_rxjava2: String = "com.squareup.retrofit2:adapter-rxjava2:" +
            Versions.com_squareup_retrofit2

    /**
     * https://github.com/square/retrofit/ */
    const val converter_gson: String = "com.squareup.retrofit2:converter-gson:" +
            Versions.com_squareup_retrofit2

    /**
     * https://github.com/square/retrofit/ */
    const val retrofit: String = "com.squareup.retrofit2:retrofit:" +
            Versions.com_squareup_retrofit2

    /**
     * https://github.com/tbruyelle/RxPermissions */
    const val rxpermissions: String = "com.tbruyelle.rxpermissions:rxpermissions:" +
            Versions.rxpermissions

    const val de_fayard_buildsrcversions_gradle_plugin: String =
            "de.fayard.buildSrcVersions:de.fayard.buildSrcVersions.gradle.plugin:" +
            Versions.de_fayard_buildsrcversions_gradle_plugin

    const val io_fabric_tools_gradle: String = "io.fabric.tools:gradle:" +
            Versions.io_fabric_tools_gradle

    /**
     * https://github.com/ReactiveX/RxAndroid */
    const val rxandroid: String = "io.reactivex.rxjava2:rxandroid:" + Versions.rxandroid

    /**
     * https://github.com/ReactiveX/RxJava */
    const val rxjava: String = "io.reactivex.rxjava2:rxjava:" + Versions.rxjava

    /**
     * https://github.com/ReactiveX/RxKotlin */
    const val rxkotlin: String = "io.reactivex.rxjava2:rxkotlin:" + Versions.rxkotlin

    /**
     * http://junit.org */
    const val junit_junit: String = "junit:junit:" + Versions.junit_junit

    /**
     * https://github.com/JetBrains/anko */
    const val anko: String = "org.jetbrains.anko:anko:" + Versions.anko

    /**
     * https://kotlinlang.org/ */
    const val kotlin_android_extensions: String =
            "org.jetbrains.kotlin:kotlin-android-extensions:" + Versions.kotlin_android_extensions

    /**
     * https://kotlinlang.org/ */
    const val kotlin_annotation_processing_gradle: String =
            "org.jetbrains.kotlin:kotlin-annotation-processing-gradle:" +
            Versions.kotlin_annotation_processing_gradle

    /**
     * https://kotlinlang.org/ */
    const val kotlin_gradle_plugin: String = "org.jetbrains.kotlin:kotlin-gradle-plugin:" +
            Versions.kotlin_gradle_plugin

    /**
     * https://kotlinlang.org/ */
    const val org_jetbrains_kotlin_kotlin_reflect: String = "org.jetbrains.kotlin:kotlin-reflect:" +
            Versions.org_jetbrains_kotlin_kotlin_reflect

    /**
     * https://kotlinlang.org/ */
    const val org_jetbrains_kotlin_kotlin_stdlib_jdk7: String =
            "org.jetbrains.kotlin:kotlin-stdlib-jdk7:" +
            Versions.org_jetbrains_kotlin_kotlin_stdlib_jdk7

    /**
     * https://github.com/Kotlin/kotlinx.coroutines */
    const val kotlinx_coroutines_android: String =
            "org.jetbrains.kotlinx:kotlinx-coroutines-android:" + Versions.org_jetbrains_kotlinx

    /**
     * https://github.com/Kotlin/kotlinx.coroutines */
    const val kotlinx_coroutines_core: String = "org.jetbrains.kotlinx:kotlinx-coroutines-core:" +
            Versions.org_jetbrains_kotlinx

    /**
     * https://github.com/mockito/mockito */
    const val mockito_android: String = "org.mockito:mockito-android:" + Versions.mockito_android

    /**
     * https://github.com/mockito/mockito */
    const val mockito_inline: String = "org.mockito:mockito-inline:" + Versions.mockito_inline

    /**
     * http://robolectric.org */
    const val robolectric: String = "org.robolectric:robolectric:" + Versions.robolectric
}
